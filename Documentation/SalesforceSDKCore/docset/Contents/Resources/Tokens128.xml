<?xml version="1.0" encoding="UTF-8"?>
<Tokens version="1.0">
	<File path="Classes/SFSDKWindowManager.html">
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/cl/SFSDKWindowManager</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>SFSDKWindowManager.h</DeclaredIn>
            
			
			<NodeRef refid="128"/>
		</Token>
		
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/SFSDKWindowManager/setUserInterfaceStyle:</TokenIdentifier>
			<Abstract type="html">Sets overrideUserInterfaceStyle on managed windows. Default is UIUserInterfaceStyleUnspecified.</Abstract>
			<DeclaredIn>SFSDKWindowManager.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, assign) UIUserInterfaceStyle userInterfaceStyle</Declaration>
			
			
			<Anchor>//api/name/userInterfaceStyle</Anchor>
            <NodeRef refid="128"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/SFSDKWindowManager/userInterfaceStyle</TokenIdentifier>
			<Abstract type="html">Sets overrideUserInterfaceStyle on managed windows. Default is UIUserInterfaceStyleUnspecified.</Abstract>
			<DeclaredIn>SFSDKWindowManager.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, assign) UIUserInterfaceStyle userInterfaceStyle</Declaration>
			
			
			<Anchor>//api/name/userInterfaceStyle</Anchor>
            <NodeRef refid="128"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/SFSDKWindowManager/userInterfaceStyle</TokenIdentifier>
			<Abstract type="html">Sets overrideUserInterfaceStyle on managed windows. Default is UIUserInterfaceStyleUnspecified.</Abstract>
			<DeclaredIn>SFSDKWindowManager.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, assign) UIUserInterfaceStyle userInterfaceStyle</Declaration>
			
			
			<Anchor>//api/name/userInterfaceStyle</Anchor>
            <NodeRef refid="128"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/SFSDKWindowManager/screenLockWindow</TokenIdentifier>
			<Abstract type="html">SDK uses this window to present the screen lock view.</Abstract>
			<DeclaredIn>SFSDKWindowManager.h</DeclaredIn>
			
			<Declaration>- (nonnull SFSDKWindowContainer *)screenLockWindow</Declaration>
			
			
			<Anchor>//api/name/screenLockWindow</Anchor>
            <NodeRef refid="128"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/SFSDKWindowManager/authWindow:</TokenIdentifier>
			<Abstract type="html">SDK uses this window to present the login flow for the given scene. Defaults a connected scene if one isn&apos;t provided.</Abstract>
			<DeclaredIn>SFSDKWindowManager.h</DeclaredIn>
			
			<Declaration>- (nonnull SFSDKWindowContainer *)authWindow:(nullable UIScene *)scene</Declaration>
			
			
			<Anchor>//api/name/authWindow:</Anchor>
            <NodeRef refid="128"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/SFSDKWindowManager/snapshotWindow:</TokenIdentifier>
			<Abstract type="html">SDK uses this window to present the snapshot view for a given scene. Defaults to a connected scene if one isn&apos;t provided.</Abstract>
			<DeclaredIn>SFSDKWindowManager.h</DeclaredIn>
			
			<Declaration>- (nonnull SFSDKWindowContainer *)snapshotWindow:(nullable UIScene *)scene</Declaration>
			
			
			<Anchor>//api/name/snapshotWindow:</Anchor>
            <NodeRef refid="128"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/SFSDKWindowManager/mainWindow:</TokenIdentifier>
			<Abstract type="html">Returns the SFSDKWindowContainer window representing the mainWindow that has been set for a given scene. Defaults to a connected scene if one isn&apos;t provided.</Abstract>
			<DeclaredIn>SFSDKWindowManager.h</DeclaredIn>
			
			<Declaration>- (nonnull SFSDKWindowContainer *)mainWindow:(nullable UIScene *)scene</Declaration>
			
			
			<Anchor>//api/name/mainWindow:</Anchor>
            <NodeRef refid="128"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/SFSDKWindowManager/activeWindow:</TokenIdentifier>
			<Abstract type="html">Returns the SFSDKWindowContainer window representing the active presented window that has been set for a given scene. Defaults to a connected scene if one isn&apos;t provided.</Abstract>
			<DeclaredIn>SFSDKWindowManager.h</DeclaredIn>
			
			<Declaration>- (nullable SFSDKWindowContainer *)activeWindow:(nullable UIScene *)scene</Declaration>
			
			
			<Anchor>//api/name/activeWindow:</Anchor>
            <NodeRef refid="128"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/SFSDKWindowManager/setMainUIWindow:</TokenIdentifier>
			<Abstract type="html">Used to setup the main application window.</Abstract>
			<DeclaredIn>SFSDKWindowManager.h</DeclaredIn>
			
			<Declaration>- (void)setMainUIWindow:(UIWindow *_Nonnull)window</Declaration>
			
			
			<Anchor>//api/name/setMainUIWindow:</Anchor>
            <NodeRef refid="128"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/SFSDKWindowManager/setMainUIWindow:scene:</TokenIdentifier>
			<Abstract type="html">Used to setup the main window for a given scene. Defaults to a connected scene if one isn&apos;t provided.</Abstract>
			<DeclaredIn>SFSDKWindowManager.h</DeclaredIn>
			
			<Declaration>- (void)setMainUIWindow:(nonnull UIWindow *)window scene:(nullable UIScene *)scene</Declaration>
			
			
			<Anchor>//api/name/setMainUIWindow:scene:</Anchor>
            <NodeRef refid="128"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/SFSDKWindowManager/createNewNamedWindow:</TokenIdentifier>
			<Abstract type="html">Used to create a new Window keyed by a specified name</Abstract>
			<DeclaredIn>SFSDKWindowManager.h</DeclaredIn>
			
			<Declaration>- (SFSDKWindowContainer *_Nullable)createNewNamedWindow:(NSString *_Nonnull)windowName</Declaration>
			
			
			<Anchor>//api/name/createNewNamedWindow:</Anchor>
            <NodeRef refid="128"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/SFSDKWindowManager/createNewNamedWindow:scene:</TokenIdentifier>
			<Abstract type="html">Used to create a new window keyed by a specified name for a given scene. Defaults to a  connected scene if one isn&apos;t provided.</Abstract>
			<DeclaredIn>SFSDKWindowManager.h</DeclaredIn>
			
			<Declaration>- (nullable SFSDKWindowContainer *)createNewNamedWindow:(nonnull NSString *)windowName scene:(nullable UIScene *)scene</Declaration>
			
			
			<Anchor>//api/name/createNewNamedWindow:scene:</Anchor>
            <NodeRef refid="128"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/SFSDKWindowManager/removeNamedWindow:</TokenIdentifier>
			<Abstract type="html">Used to remove a Window by a specified name</Abstract>
			<DeclaredIn>SFSDKWindowManager.h</DeclaredIn>
			
			<Declaration>- (BOOL)removeNamedWindow:(NSString *_Nonnull)windowName</Declaration>
			
			
			<Anchor>//api/name/removeNamedWindow:</Anchor>
            <NodeRef refid="128"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/SFSDKWindowManager/removeNamedWindow:scene:</TokenIdentifier>
			<Abstract type="html">Used to remove a window by a specified name for a given scene. Defaults to a connected scene if one isn&apos;t provided.</Abstract>
			<DeclaredIn>SFSDKWindowManager.h</DeclaredIn>
			
			<Declaration>- (BOOL)removeNamedWindow:(nonnull NSString *)windowName scene:(nullable UIScene *)scene</Declaration>
			
			
			<Anchor>//api/name/removeNamedWindow:scene:</Anchor>
            <NodeRef refid="128"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/SFSDKWindowManager/windowWithName:</TokenIdentifier>
			<Abstract type="html">Used to retrieve a Window by a specified name</Abstract>
			<DeclaredIn>SFSDKWindowManager.h</DeclaredIn>
			
			<Declaration>- (SFSDKWindowContainer *_Nullable)windowWithName:(NSString *_Nonnull)name</Declaration>
			
			
			<Anchor>//api/name/windowWithName:</Anchor>
            <NodeRef refid="128"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/SFSDKWindowManager/windowWithName:scene:</TokenIdentifier>
			<Abstract type="html">Used to retrieve a window by a specified name for a given scene. Defaults to a connected scene if one isn&apos;t provided.</Abstract>
			<DeclaredIn>SFSDKWindowManager.h</DeclaredIn>
			
			<Declaration>- (nullable SFSDKWindowContainer *)windowWithName:(nonnull NSString *)name scene:(nullable UIScene *)scene</Declaration>
			
			
			<Anchor>//api/name/windowWithName:scene:</Anchor>
            <NodeRef refid="128"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/SFSDKWindowManager/addDelegate:</TokenIdentifier>
			<Abstract type="html">Add a Window Manager Delegate</Abstract>
			<DeclaredIn>SFSDKWindowManager.h</DeclaredIn>
			
			<Declaration>- (void)addDelegate:(id&lt;SFSDKWindowManagerDelegate&gt; _Nonnull)delegate</Declaration>
			
			
			<Anchor>//api/name/addDelegate:</Anchor>
            <NodeRef refid="128"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/SFSDKWindowManager/removeDelegate:</TokenIdentifier>
			<Abstract type="html">Remove a Window Manager Delegate</Abstract>
			<DeclaredIn>SFSDKWindowManager.h</DeclaredIn>
			
			<Declaration>- (void)removeDelegate:(id&lt;SFSDKWindowManagerDelegate&gt; _Nonnull)delegate</Declaration>
			
			
			<Anchor>//api/name/removeDelegate:</Anchor>
            <NodeRef refid="128"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/SFSDKWindowManager/sharedManager</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>SFSDKWindowManager.h</DeclaredIn>
			
			<Declaration>+ (instancetype _Nonnull)sharedManager</Declaration>
			
			
			<Anchor>//api/name/sharedManager</Anchor>
            <NodeRef refid="128"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/SFSDKWindowManager/defaultScene</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>SFSDKWindowManager+Internal.h</DeclaredIn>
			
			<Declaration>- (UIScene *)defaultScene</Declaration>
			
			
			<Anchor>//api/name/defaultScene</Anchor>
            <NodeRef refid="128"/>
		</Token>
		
        
        
	</File>
</Tokens>