<project name="HybridContainer" default="build">
    <import file="../../shared/build.xml"/>

    <property environment="env"/>
    <property id="target.name" name="target.name" value="${ant.project.name}"/>
    <property name="project.dir" value=".."/>
    <property name="artifacts.dir" location="artifacts"/>
    <property name="dependency.dir" value="../dependencies"/>

    <property name="xcodetemplate.fullname" value="Hybrid Force.com App.xctemplate"/>
    <property name="xcodetemplate.base.dir" value="hybrid_template_base"/>
    <property name="xcodetemplate.dir" value="${project.dir}/${xcodetemplate.fullname}"/>
    <property name="xcodetemplate.www.dir" value="${xcodetemplate.dir}/www"/>
    <property name="xcodetemplate.jquery.dir" value="${xcodetemplate.www.dir}/jquery"/>
    <property name="xcodetemplate.install.dir" value="${env.HOME}/Library/Developer/Xcode/Templates/Project Templates/Application/${xcodetemplate.fullname}"/>
    <property name="xcodetemplate.dependency.dir" value="${xcodetemplate.dir}/dependencies"/>
    <property name="xcodetemplate.shared.base.dir" value="../../external/shared"/>
    <property name="xcodetemplate.pgplugin.base.dir" value="${xcodetemplate.shared.base.dir}/PhoneGap"/>
    <property name="xcodetemplate.jquery.base.dir" value="${xcodetemplate.shared.base.dir}/jquery"/>
    
    <property id="platform.iphoneos" name="platform.iphoneos" value="iphoneos"/>
    <property id="platform.iphonesimulator" name="platform.iphonesimulator" value="iphonesimulator"/>

    <property id="sdk.iphoneos" name="sdk.iphoneos" value="${platform.iphoneos}"/>
    <property id="sdk.iphonesimulator" name="sdk.iphonesimulator" value="${platform.iphonesimulator}"/>

    <property id="configuration.debug" name="configuration.debug" value="Debug"/>
    <property id="configuration.release" name="configuration.release" value="Release"/>

    <!-- main -->
    <target name="pre"  
	depends="initArtifacts, ensureDependencies"/>

	<target name="ensureDependencies"
		depends="iOSShared.dependency.sbjson, iOSShared.dependency.callback-ios, iOSShared.dependency.oauth"
		/>
		
	<target name="cleanDependencies"
		depends="iOSShared.dependency.sbjson.clean, iOSShared.dependency.callback-ios.clean, iOSShared.dependency.oauth.clean"
		/>
		
    <target name="initArtifacts">
        <mkdir dir="${artifacts.dir}"/>
        <mkdir dir="${dependency.dir}" />
    </target>

   <target name="install" depends="build" description="create fresh install artifacts" >
		<antcall target="documentation.archive" />
   </target>

	<target name="build" depends="pre" description="regenerate main build artifacts" >
		<antcall target="xcodetemplate.install" />
	</target>

	<target name="documentation.archive" 
		depends="documentation.generate" >
		<!-- Copy the documentation out to the Artifacts root directory before we delete it -->
        <delete dir="${project.dir}/Documentation" failonerror="false"/>
        <copy todir="${project.dir}/Documentation/${target.name}">
            <fileset dir="${artifacts.dir}/Documentation"/>
        </copy>
	</target>
	
    <target name="documentation.generate">
        <antcall target="iOSShared.appledocDocumentation">
            <param name="source" value="${xcodetemplate.base.dir}/Container"/>
            <param name="output" value="${artifacts.dir}/Documentation"/>
            <param name="additionalOptions" value="--docset-feed-url ${env.JOB_URL}lastSuccessfulBuild/artifact/artifacts/Release/Documentation/publish/%DOCSETATOMFILENAME --docset-package-url ${env.JOB_URL}lastSuccessfulBuild/artifact/artifacts/Release/Documentation/publish/%DOCSETPACKAGEFILENAME AppledocSettings-Docset.plist"/>
        </antcall>

        <antcall target="iOSShared.appledocDocumentation">
            <param name="source" value="${xcodetemplate.base.dir}/Container"/>
            <param name="output" value="${artifacts.dir}/Documentation"/>
            <param name="additionalOptions" value="AppledocSettings-HTML.plist"/>
        </antcall>

    </target>


    <target name="xcodetemplate.create"  >
        <delete dir="${xcodetemplate.dir}" failonerror="false"/>
        <copy todir="${xcodetemplate.dir}">
            <fileset dir="${xcodetemplate.base.dir}"/>
        </copy>
        <copy file="${xcodetemplate.shared.base.dir}/forcetk.js" todir="${xcodetemplate.www.dir}" />
        <copy todir="${xcodetemplate.www.dir}">
            <fileset dir="${xcodetemplate.pgplugin.base.dir}" />
        </copy>
        <copy todir="${xcodetemplate.jquery.dir}">
            <fileset dir="${xcodetemplate.jquery.base.dir}" />
        </copy>
        <copy todir="${xcodetemplate.dependency.dir}">
            <fileset dir="${dependency.dir}"/>
        </copy>
    </target>

    <target name="xcodetemplate.install" depends="xcodetemplate.create">
        <delete dir="${xcodetemplate.install.dir}" failonerror="false"/>
        <copy todir="${xcodetemplate.install.dir}">
            <fileset dir="${xcodetemplate.dir}"/>
        </copy>
    </target>


    <target name="clean">
        <delete dir="${artifacts.dir}" failonerror="false" />
        <delete dir="${xcodetemplate.dir}" failonerror="false"/>
        <delete dir="${xcodetemplate.install.dir}" failonerror="false"/>
        <delete dir="${dependency.dir}" failonerror="false"/>
    </target>
	

		
    <target name="clean.full"
        depends="clean, cleanDependencies">
	    <delete dir="${project.dir}/Documentation/${target.name}" failonerror="false" />
    </target>

</project>
