<!--
    Build file for SalesforceOAuth project
-->
<project name="SalesforceOAuth" default="all">
    <import file="../../../shared/build.xml"/>

    <property environment="env"/>
    <property name="env.BUILD_NUMBER" value="1"/>
    <property name="env.WORKSPACE" value="."/>

    <!-- Supplied by the automated build server -->
    <property id="SDK" name="SDK" value="Latest"/>

    <property id="target.name" name="target.name" value="${ant.project.name}"/>
    <property name="project.dir" location=".."/>
    <property name="artifacts.dir" location="artifacts"/>
    <property name="dist.dir" location="../../../dist"/>

    <property id="platform.iphoneos" name="platform.iphoneos" value="iphoneos"/>
    <property id="platform.iphonesimulator" name="platform.iphonesimulator" value="iphonesimulator"/>

    <property id="sdk.iphoneos" name="sdk.iphoneos" value="${platform.iphoneos}"/>
    <property id="sdk.iphonesimulator" name="sdk.iphonesimulator" value="${platform.iphonesimulator}"/>

    <property id="configuration.debug" name="configuration.debug" value="Debug"/>
    <property id="configuration.release" name="configuration.release" value="Release"/>

    <target name="all" depends="pre" description="do it all">
        <antcall target="compileDebug"/>
        <antcall target="compileRelease"/>
        <delete dir="${project.dir}/build"/>
   </target>

    <target name="build" description="builds main artifacts" > 
        <antcall target="compileDebug"/>
        <delete dir="${project.dir}/build"/>
    </target>

   <target name="pre" depends="initArtifacts" />

    <target name="initArtifacts">
        <delete dir="${artifacts.dir}"/>
        <mkdir dir="${artifacts.dir}"/>
    </target>

    <target name="compileDebug" depends="pre" >
	    <property name="libname" value="libSalesforceOAuth.a"/>
    
        <antcall target="iOSShared.compile">
            <param name="install_path" value="${artifacts.dir}/${target.name}"/>
            <param name="configuration" value="${configuration.debug}"/>
            <param name="sdk" refid="platform.iphoneos"/>
            <param name="target" value="SalesforceOAuth"/>
            <param name="action" value="install"/>
        </antcall>

        <antcall target="iOSShared.compile">
            <param name="install_path" value="${artifacts.dir}/Simulator"/>
            <param name="configuration" value="${configuration.debug}"/>
            <param name="sdk" refid="platform.iphonesimulator"/>
            <param name="target" value="SalesforceOAuth"/>
            <param name="action" value="install"/>
        </antcall>

        <antcall target="iOSShared.lipo">
	        <param name="device" value="${artifacts.dir}/${target.name}/Libraries/${libname}"/>
	        <param name="simulator" value="${artifacts.dir}/Simulator/Libraries/${libname}"/>
        </antcall>

        <delete dir="${artifacts.dir}/Simulator"/>

        <antcall target="iOSShared.compress">
            <param name="destfile" value="${artifacts.dir}/${target.name}-Debug.zip"/>
            <param name="basedir" value="${artifacts.dir}/${target.name}"/>
        </antcall>

		<!-- Copy the zip product to the distribution dir -->
		<copy todir="${dist.dir}/${target.name}"
		    file="${artifacts.dir}/${target.name}-Debug.zip" />

        <delete dir="${artifacts.dir}/${target.name}"/>
    </target>

    <target name="compileRelease" depends="pre" >
        <antcall target="iOSShared.compile">
            <param name="install_path" value="${artifacts.dir}/${target.name}"/>
            <param name="configuration" value="${configuration.release}"/>
            <param name="sdk" refid="platform.iphoneos"/>
            <param name="target" value="SalesforceOAuth"/>
            <param name="action" value="install"/>
        </antcall>

        <!-- Generate the documentation -->
        <antcall target="compileRelease.documentation"/>

        <!-- Create a ZIP archive for the release build -->
        <antcall target="iOSShared.compress">
            <param name="destfile" value="${artifacts.dir}/${target.name}-Release.zip"/>
            <param name="basedir" value="${artifacts.dir}/${target.name}"/>
        </antcall>

		<!-- Copy the zip product to the distribution dir -->
		<copy todir="${dist.dir}/${target.name}"
			file="${artifacts.dir}/${target.name}-Release.zip"/>

        <!-- Copy the documentation out to the Artifacts root directory before we delete it -->
        <delete dir="${project.dir}/Documentation" failonerror="false"/>
        <copy todir="${project.dir}/Documentation">
            <fileset dir="${artifacts.dir}/${target.name}/Documentation"/>
        </copy>

        <delete dir="${artifacts.dir}/${target.name}"/>
    </target>

    <target name="compileRelease.documentation">
        <antcall target="iOSShared.appledocDocumentation">
            <param name="source" value="${artifacts.dir}/${target.name}/Headers"/>
            <param name="output" value="${artifacts.dir}/${target.name}/Documentation"/>
            <param name="additionalOptions" value="--docset-feed-url ${env.JOB_URL}lastSuccessfulBuild/artifact/artifacts/Release/Documentation/publish/%DOCSETATOMFILENAME --docset-package-url ${env.JOB_URL}lastSuccessfulBuild/artifact/artifacts/Release/Documentation/publish/%DOCSETPACKAGEFILENAME AppledocSettings-Docset.plist"/>
        </antcall>
        <antcall target="iOSShared.appledocDocumentation">
            <param name="source" value="${artifacts.dir}/${target.name}/Headers"/>
            <param name="output" value="${artifacts.dir}/${target.name}/Documentation"/>
            <param name="additionalOptions" value="AppledocSettings-HTML.plist"/>
        </antcall>
    </target>

    <target name="clean">
        <delete dir="${artifacts.dir}" failonerror="false" />
        <delete dir="${dist.dir}/${target.name}" failonerror="false" />
    </target>
</project>
